/**
 * –î–µ–±–∞–≥ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Supabase –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 * –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã
 */

// üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
window.checkSupabaseConnection = async () => {
    console.log('=== –ü–†–û–í–ï–†–ö–ê SUPABASE –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø ===');
    
    if (!window.supabaseClient) {
        console.error('‚ùå supabaseClient –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    console.log('üìä –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', window.supabaseClient.isConnected);
    console.log('üë§ –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è:', window.supabaseClient.currentSession);
    console.log('üåç –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏—Ä–∞:', window.supabaseClient.worldState);
    
    if (window.supabaseClient.isConnected) {
        try {
            // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ë–î
            const { data, error } = await window.supabaseClient.supabase
                .from('players')
                .select('count')
                .limit(1);
                
            if (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ë–î:', error);
            } else {
                console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                await window.debugSupabaseStats();
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ë–î:', error);
        }
    }
};

// üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
window.debugSupabaseStats = async () => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    console.log('=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===');
    
    try {
        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤
        const { data: players, error: playersError } = await window.supabaseClient.supabase
            .from('players')
            .select('id, nickname, faction, is_online')
            .order('created_at', { ascending: false });
            
        if (!playersError) {
            console.log(`üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: ${players.length}`);
            console.log(`üü¢ –û–Ω–ª–∞–π–Ω: ${players.filter(p => p.is_online).length}`);
            console.log(`‚öôÔ∏è –†–∞–±–æ—Ç—è–≥–∏: ${players.filter(p => p.faction === 'workers').length}`);
            console.log(`üé® –ö—Ä–µ–∞–∫–ª—ã: ${players.filter(p => p.faction === 'creatives').length}`);
            console.log('üìã –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:', players);
        }
        
        // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–±–æ–≤
        const { data: mobs, error: mobsError } = await window.supabaseClient.supabase
            .from('world_mobs')
            .select('id, name, x, y, is_alive');
            
        if (!mobsError) {
            console.log(`üëπ –í—Å–µ–≥–æ –º–æ–±–æ–≤: ${mobs.length}`);
            console.log(`üíÄ –ñ–∏–≤—ã—Ö: ${mobs.filter(m => m.is_alive).length}`);
            console.log('üó∫Ô∏è –ú–æ–±—ã –Ω–∞ –∫–∞—Ä—Ç–µ:', mobs);
        }
        
        // –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞
        const { data: messages, error: messagesError } = await window.supabaseClient.supabase
            .from('chat_messages')
            .select(`
                message, created_at,
                players:player_id (nickname, faction)
            `)
            .order('created_at', { ascending: false })
            .limit(5);
            
        if (!messagesError) {
            console.log(`üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ: ${messages.length}`);
            console.log('üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', messages);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    }
};

// üó∫Ô∏è –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –º–∏—Ä–∞
window.debugWorldMap = async () => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    console.log('=== –ö–ê–†–¢–ê –ú–ò–†–ê 15x15 ===');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
        const { data: players } = await window.supabaseClient.supabase
            .from('players')
            .select('nickname, x, y, faction, is_online');
            
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–æ–±–æ–≤
        const { data: mobs } = await window.supabaseClient.supabase
            .from('world_mobs')
            .select('name, x, y, is_alive');
        
        // –°—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—É
        let map = '';
        for (let y = 0; y < 15; y++) {
            let row = '';
            for (let x = 0; x < 15; x++) {
                const player = players?.find(p => p.x === x && p.y === y && p.is_online);
                const mob = mobs?.find(m => m.x === x && m.y === y && m.is_alive);
                
                if (player) {
                    row += player.faction === 'workers' ? '‚öôÔ∏è' : 'üé®';
                } else if (mob) {
                    row += 'üëπ';
                } else {
                    row += '‚¨ú';
                }
            }
            map += row + '\n';
        }
        
        console.log(map);
        console.log('–õ–µ–≥–µ–Ω–¥–∞: ‚öôÔ∏è –†–∞–±–æ—Ç—è–≥–∏ | üé® –ö—Ä–µ–∞–∫–ª—ã | üëπ –ú–æ–±—ã | ‚¨ú –ü—É—Å—Ç–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–∞—Ä—Ç—ã:', error);
    }
};

// üß™ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
window.testSupabaseRegistration = async (nickname = 'TestUser', faction = 'workers') => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    console.log('=== –¢–ï–°–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ===');
    
    try {
        const testData = {
            nickname: nickname + '_' + Date.now(),
            faction: faction,
            gender: 'male'
        };
        
        const password = 'test123';
        
        console.log('üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', testData);
        
        const newUser = await window.supabaseClient.registerPlayer(testData, password);
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', newUser);
        
        return newUser;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
    }
};

// üîê –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
window.testSupabaseLogin = async (nickname, password = 'test123') => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    console.log('=== –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===');
    
    try {
        console.log('üîë –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫:', nickname);
        
        const user = await window.supabaseClient.loginPlayer(nickname, password);
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', user);
        
        return user;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    }
};

// üí¨ –¢–µ—Å—Ç —á–∞—Ç–∞
window.testSupabaseChat = async (message = '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ') => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    if (!window.supabaseClient.currentSession) {
        console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.');
        return;
    }
    
    console.log('=== –¢–ï–°–¢ –ß–ê–¢–ê ===');
    
    try {
        console.log('üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
        
        const result = await window.supabaseClient.sendChatMessage(message);
        console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', result);
        
        return result;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
};

// üèÉ –¢–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è
window.testSupabaseMovement = async (direction = 'up') => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    if (!window.supabaseClient.currentSession) {
        console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å.');
        return;
    }
    
    console.log('=== –¢–ï–°–¢ –î–í–ò–ñ–ï–ù–ò–Ø ===');
    
    try {
        console.log('üèÉ –î–≤–∏–≥–∞–µ–º—Å—è:', direction);
        console.log('–¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è:', {
            x: window.supabaseClient.currentSession.x,
            y: window.supabaseClient.currentSession.y
        });
        
        const result = await window.supabaseClient.movePlayer(direction);
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–≤–∏–∂–µ–Ω–∏—è:', result);
        
        return result;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è:', error);
    }
};

// üî• –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
window.cleanupTestData = async () => {
    if (!window.supabaseClient?.isConnected) {
        console.log('‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase');
        return;
    }
    
    console.log('=== –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• ===');
    
    try {
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const { data, error } = await window.supabaseClient.supabase
            .from('players')
            .delete()
            .like('nickname', 'TestUser_%');
            
        if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
        } else {
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    }
};

// üìã –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
window.showSupabaseCommands = () => {
    console.log('=== –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´ –î–ï–ë–ê–ì–ê ===');
    console.log('üîç checkSupabaseConnection() - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ');
    console.log('üìä debugSupabaseStats() - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î');
    console.log('üó∫Ô∏è debugWorldMap() - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç—É –º–∏—Ä–∞');
    console.log('üß™ testSupabaseRegistration("nickname", "faction") - —Ç–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    console.log('üîê testSupabaseLogin("nickname", "password") - —Ç–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    console.log('üí¨ testSupabaseChat("—Å–æ–æ–±—â–µ–Ω–∏–µ") - —Ç–µ—Å—Ç —á–∞—Ç–∞');
    console.log('üèÉ testSupabaseMovement("up/down/left/right") - —Ç–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏—è');
    console.log('üî• cleanupTestData() - –æ—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
    console.log('üìã showSupabaseCommands() - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É');
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        console.log('üöÄ Supabase –¥–µ–±–∞–≥ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
        console.log('–í–≤–µ–¥–∏—Ç–µ showSupabaseCommands() –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥');
    }, 3000);
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.supabaseDebug = {
    checkConnection: window.checkSupabaseConnection,
    showStats: window.debugSupabaseStats,
    showMap: window.debugWorldMap,
    testRegister: window.testSupabaseRegistration,
    testLogin: window.testSupabaseLogin,
    testChat: window.testSupabaseChat,
    testMove: window.testSupabaseMovement,
    cleanup: window.cleanupTestData,
    help: window.showSupabaseCommands
};
